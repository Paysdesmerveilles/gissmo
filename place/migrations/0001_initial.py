# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-03-21 09:46
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('user', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
        ('document', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Built',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Latitude (째)')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Longitude (째)')),
                ('elevation', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True, verbose_name='Elevation (m)')),
                ('latitude_datum', models.CharField(blank=True, default='WGS84', max_length=15, null=True, verbose_name='Latitude datum')),
                ('longitude_datum', models.CharField(blank=True, default='WGS84', max_length=15, null=True, verbose_name='Longitude datum')),
                ('name', models.CharField(default='Unknown', max_length=40)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BuiltType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
            ],
            options={
                'verbose_name': 'Built type',
            },
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Latitude (째)')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Longitude (째)')),
                ('elevation', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True, verbose_name='Elevation (m)')),
                ('latitude_datum', models.CharField(blank=True, default='WGS84', max_length=15, null=True, verbose_name='Latitude datum')),
                ('longitude_datum', models.CharField(blank=True, default='WGS84', max_length=15, null=True, verbose_name='Longitude datum')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('_type', models.IntegerField(choices=[(0, 'Observatory'), (1, 'Customer service place'), (2, 'Undefined'), (3, 'Other'), (4, 'Testing site'), (5, 'Theoritical site')], default=5, verbose_name='Type')),
                ('description', models.TextField(blank=True, null=True)),
                ('creation_date', models.DateField(blank=True, null=True, verbose_name='Creation date')),
                ('address_street', models.CharField(blank=True, max_length=100, null=True, verbose_name='Street')),
                ('address_zipcode', models.CharField(blank=True, max_length=15, null=True, verbose_name='Zip code')),
                ('address_city', models.CharField(blank=True, max_length=100, null=True, verbose_name='City')),
                ('address_region', models.CharField(blank=True, max_length=100, null=True, verbose_name='Region')),
                ('address_county', models.CharField(blank=True, max_length=100, null=True, verbose_name='District')),
                ('address_country', models.CharField(blank=True, max_length=50, null=True, verbose_name='Country')),
                ('geology', models.CharField(blank=True, max_length=50, null=True, verbose_name='Geological formation')),
                ('contact', models.TextField(blank=True, null=True)),
                ('documents', models.ManyToManyField(blank=True, to='document.Document')),
                ('operator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.Organism')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='place.Site', verbose_name='Referent site')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.IntegerField(choices=[(0, 'Available'), (1, 'Used'), (2, 'Broken')])),
                ('start', models.DateTimeField(auto_now=True)),
                ('end', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StateAvailable',
            fields=[
                ('state_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='place.State')),
            ],
            options={
                'abstract': False,
            },
            bases=('place.state',),
        ),
        migrations.CreateModel(
            name='StateBroken',
            fields=[
                ('state_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='place.State')),
            ],
            options={
                'abstract': False,
            },
            bases=('place.state',),
        ),
        migrations.CreateModel(
            name='StateUsed',
            fields=[
                ('state_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='place.State')),
            ],
            options={
                'abstract': False,
            },
            bases=('place.state',),
        ),
        migrations.AddField(
            model_name='state',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_place.state_set+', to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='state',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='linked_site', to='place.Site'),
        ),
        migrations.AddField(
            model_name='site',
            name='state',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='current_state', to='place.State'),
        ),
        migrations.AddField(
            model_name='built',
            name='_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='place.BuiltType', verbose_name='Type'),
        ),
        migrations.AddField(
            model_name='built',
            name='documents',
            field=models.ManyToManyField(blank=True, to='document.Document'),
        ),
        migrations.AddField(
            model_name='built',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='place.Site'),
        ),
    ]
