# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-03-04 17:03
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Configuration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parameter', models.CharField(max_length=255)),
                ('value', models.CharField(max_length=255)),
                ('start', models.DateTimeField(auto_now=True)),
                ('end', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Serial number')),
                ('vendor', models.CharField(blank=True, max_length=50, null=True)),
                ('purchase_date', models.DateField(blank=True, null=True, verbose_name='Purchase date')),
                ('clock_drift', models.FloatField(blank=True, null=True, verbose_name='Clock drift')),
                ('clock_drift_unit', models.CharField(blank=True, default='SECONDS/SAMPLE', max_length=15, null=True)),
                ('storage_format', models.CharField(blank=True, max_length=50, null=True, verbose_name='Storage format')),
            ],
        ),
        migrations.CreateModel(
            name='ForbiddenEquipmentModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': "Forbidden Equipment's model",
            },
        ),
        migrations.CreateModel(
            name='IPAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=255, verbose_name='IP Address')),
                ('netmask', models.GenericIPAddressField(verbose_name='Netmask')),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='equipment.Equipment')),
            ],
        ),
        migrations.CreateModel(
            name='Model',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('rank', models.IntegerField()),
                ('manufacturer', models.CharField(default='Unknown', max_length=50)),
                ('is_network_model', models.BooleanField(default=False, verbose_name='Network configurable?')),
            ],
            options={
                'verbose_name': "Equipment's model",
            },
        ),
        migrations.CreateModel(
            name='Parameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='equipment.Model')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('protocol', models.IntegerField(choices=[(0, 'SSH protocol'), (1, 'Seed link protocol'), (2, 'HTTP'), (3, 'HTTPS'), (4, 'SNMP'), (5, 'ICMP')])),
                ('port', models.PositiveIntegerField()),
                ('description', models.CharField(blank=True, max_length=256, null=True)),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='equipment.Equipment')),
            ],
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('rank', models.IntegerField()),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='equipment.Type', verbose_name='Supertype')),
            ],
            options={
                'verbose_name': "Equipment's type",
            },
        ),
        migrations.CreateModel(
            name='Value',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('is_default', models.BooleanField(default=False)),
            ],
        ),
        migrations.AddField(
            model_name='model',
            name='_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='equipment.Type', verbose_name='Type'),
        ),
        migrations.AddField(
            model_name='forbiddenequipmentmodel',
            name='original',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='equipment.Model', verbose_name='Forbidden Model'),
        ),
        migrations.AddField(
            model_name='forbiddenequipmentmodel',
            name='recommended',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommended_model', to='equipment.Model', verbose_name='Recommended Model'),
        ),
        migrations.AddField(
            model_name='equipment',
            name='model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='equipment.Model'),
        ),
    ]
